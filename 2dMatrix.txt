    la      $a0,                    matrixpointer                                                                                   # Load matrix pointer address
    jal     init_matrix                                                                                                             # Initialize with our data

    la      $a0,                    matrixpointer
    jal     print_matrix


    la      $a0,                    matrixpointer
    jal     check_matrix

    # Print results
    move    $t0,                    $v0                                                                                             # Save boolean result
    move    $t1,                    $v1                                                                                             # Save winning value

    # Print result message
    li      $v0,                    4
    la      $a0,                    result_msg
    syscall

    # Print boolean result (1=true, 0=false)
    li      $v0,                    1
    move    $a0,                    $t0
    syscall

    # Print winning value message
    li      $v0,                    4
    la      $a0,                    value_msg
    syscall

    # Print the winning value (if any)
    li      $v0,                    1
    move    $a0,                    $t1
    syscall

    jal     print_newline
    li      $a0,                    81
    la      $a1,                    matrixpointer
    jal     linear_search
    lw    $a0,                    0($v0)
    li      $v0,                    SysPrintInt
    syscall

    li      $v0,                    10                                                                                              # Exit
    syscall
